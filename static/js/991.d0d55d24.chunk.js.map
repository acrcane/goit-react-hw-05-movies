{"version":3,"file":"static/js/991.d0d55d24.chunk.js","mappings":"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","sources":["api/cosntants.js","api/featchTmdbApi.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["export const API_KEY = '2d24f316d845754cbe16c61ca19f7ec5';\nexport const BASE_URL = 'https://api.themoviedb.org/3';","import axios from 'axios';\nimport { BASE_URL,  API_KEY } from './cosntants';\n\nexport async function getTrendingMovies() {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieInfo(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieReviews(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieCast(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMoviesByQuery(query) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Text = styled.h1`\n    margin: 0;\n    padding-left: 12px;\n    font-weight: 700;\n    margin-top: 24px;\n    margin-bottom: 24px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    margin-top: 20px;\n    padding-left: 12px;\n`;\n\nexport const Item = styled.li`\n    // color: lightgrey;\n`;\n\nexport const FilmLink = styled(Link)`\n    color: #3b81d7;\n    text-decoration: none;\n    &:hover {\n        color: #5f5f5f;\n        font-weight: 500;\n    }\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { List, Item, FilmLink } from './MovieList.styled';\n\n \nconst MovieList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n\n        <section style={{ paddingBottom: \"40px\" }}>\n        \n        {movies.length > 0 && (\n        <List>\n        {movies.map(movie => (\n            <Item key={movie.id}>\n            <FilmLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                    {movie.original_title ?? movie.name}\n            </FilmLink>\n            </Item>\n        ))}\n        </List>\n        )}\n        </section>\n    \n    )\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        original_title: PropTypes.string.isRequired,\n        name: PropTypes.string,\n        }).isRequired\n    ).isRequired,\n};","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    display: flex;\n    margin-top: 25px;\n    gap: 20px;\n`;\n\nexport const Input = styled.input`\n    font-family: inherit;\n    font-size: 18px;\n    line-height: 1.15;\n    margin: 0;\n    line-height: 1.3;\n    color: #fff;\n    background-color: #2e2e2e;\n    width: 300px;\n    height: 30px;\n    margin-right: 10px;\n    border-radius: 4px;\n    padding: 4px;\n    outline: none;\n`;\n\nexport const Button = styled.button`\n    padding: 8px 16px;\n    border-radius: 4px;\n    text-decoration: none;\n    background-color: #2e2e2e;\n    font-size: 18px;\n    font-weight: 500;\n    border: none;\n    color: #fff;\n    font-weight: 500;\n    cursor: pointer;\n\n    &:hover {\n        color: lightgray;\n    }\n`;","import PropTypes from 'prop-types';\nimport { Form, Input, Button } from './SearchBar.styled';\n\nconst SearchBar = ({ handleSubmit, value, setInputValue }) => {\n    return (\n        <Form onSubmit={handleSubmit}>\n        <Input \n            type = \"text\"\n            name = \"query\"\n            autoComplete = \"off\"\n            placeholder = \"Search movie\"\n            value = {value}\n            onChange = {event => setInputValue(event.target.value)}        \n        />\n        <Button type=\"submit\">Search</Button>\n        </Form>\n    );\n};\n\nexport default SearchBar;\n\n\n\nSearchBar.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired,\n    setInputValue: PropTypes.func.isRequired,\n};","import { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport SearchBar from \"components/SearchBar/SearchBar\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { getMoviesByQuery } from \"api/featchTmdbApi\";\nimport { RotatingLines } from \"react-loader-spinner\";\n\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();\n\n    const [moviesSearch, setMoviesSearch] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [load, setLoad] = useState(false);\n    const [isError, setIsError] = useState('');\n\n    const query = searchParams.get('query') ?? '';\n\n    useEffect(() => {\n        const fetch = async () => {\n        setIsError(\"\")\n        if (query === '') {\n            return;\n        }\n        setLoad(true);\n        try {\n            const dataMovies = await getMoviesByQuery(query);\n\n            const movies = dataMovies.results;\n\n            if (movies.length === 0) {\n            setIsError(`Sorry, the movies you requested: \"${query}\" not found.`)\n            }\n\n            setMoviesSearch(movies);\n            setInputValue('');\n        } catch (error) {\n            setIsError('Oops...Somesing went wrong');\n        } finally {\n            setLoad(false);\n        }\n        };\n\n        fetch();\n    }, [query]);\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (inputValue.trim() === '') {\n        setIsError('Fill in the search field');\n        return;\n        }\n\n        const normalizedValue = event.target.elements.query.value.toLowerCase();\n\n        const nextSearchParams = inputValue !== ''\n        ? { query: normalizedValue }\n        : {};\n        \n        setSearchParams(nextSearchParams);\n\n    };\n\n    return (\n        <>\n        <section>\n            <div>\n            <SearchBar\n                handleSubmit={handleSubmit}\n                value={inputValue}\n                setInputValue={setInputValue}\n            />\n            \n            { isError === \"\"\n                ? <MovieList movies={moviesSearch} />\n                : <div style={{\n                color: \"lightgrey\",\n                fontWeight: \"400\",\n                fontSize: \"18px\",\n                paddingLeft: \"24px\",\n                paddingTop:\"20px\"\n            }}>{isError}</div>}\n            </div>\n            {load && (\n            <RotatingLines\n                strokeColor=\"rgb(11, 127, 171)\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"96\"\n                visible={true}\n            />\n            )}\n        </section>\n        </>\n    )\n}\n\n\n\nexport default Movies;"],"names":["API_KEY","BASE_URL","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","log","stop","getMovieInfo","_x","_getMovieInfo","_callee2","movieId","_context2","getMovieReviews","_x2","_getMovieReviews","_callee3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_context4","getMoviesByQuery","_x4","_getMoviesByQuery","_callee5","query","_context5","List","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Item","_templateObject3","FilmLink","Link","_templateObject4","_ref","movies","location","useLocation","_jsx","style","paddingBottom","children","length","map","movie","_movie$original_title","to","id","state","from","original_title","name","Form","Input","Button","handleSubmit","value","setInputValue","_jsxs","onSubmit","type","autoComplete","placeholder","onChange","event","target","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","moviesSearch","setMoviesSearch","_useState3","_useState4","inputValue","_useState5","_useState6","load","setLoad","_useState7","_useState8","isError","setIsError","get","useEffect","fetch","dataMovies","results","finish","_Fragment","SearchBar","preventDefault","trim","normalizedValue","elements","toLowerCase","MovieList","color","fontWeight","fontSize","paddingLeft","paddingTop","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}