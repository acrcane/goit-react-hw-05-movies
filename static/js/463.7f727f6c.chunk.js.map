{"version":3,"file":"static/js/463.7f727f6c.chunk.js","mappings":"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","sources":["api/cosntants.js","api/featchTmdbApi.js","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Cast/Cast.jsx","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx"],"sourcesContent":["export const API_KEY = '2d24f316d845754cbe16c61ca19f7ec5';\nexport const BASE_URL = 'https://api.themoviedb.org/3';","import axios from 'axios';\nimport { BASE_URL,  API_KEY } from './cosntants';\n\nexport async function getTrendingMovies() {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieInfo(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieReviews(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieCast(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMoviesByQuery(query) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}","import styled from 'styled-components';\n\nexport const ListActor = styled.ul`\n    margin-top: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    width: 1200px;\n    gap: 16px;\n    padding: 0px;\n    list-style: none;\n`;\n\nexport const CardActor = styled.li`\n    width: 170px;\n    height: 300px;\n    margin: 0;\n`;\n\nexport const ImageActor = styled.img`\n    width: 100%;\n`;\n\nexport const ActorName = styled.p`\n    font-weight: 500;\n    font-size: 14px;\n    margin: 0;\n    padding: 0;\n    margin-left: 3px;\n    margin-bottom: 5px;\n`;\nexport const Text = styled.p`\n    color:#090909;\n    font-weight: 400;\n    font-size: 14px;\n    margin: 0;\n    padding: 0;\n    margin-left: 3px;\n`;","import PropTypes from 'prop-types';\nimport { ListActor, CardActor, ImageActor, ActorName, Text } from './CastList.styled';\nimport { defaultImg } from 'components/MovieItem/MovieItem';//!!!!!!!!!!!!!!!!!\n\nconst CastList = ({ actors }) => {\n    return (\n        <section>\n        <ListActor>\n            {actors.map(({ id, profile_path, name, character }) => {\n            return (\n                <CardActor key={id}>\n                <ImageActor\n                    src={\n                    profile_path\n                        ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                        : defaultImg\n                    }\n                    alt={name}\n                    width=\"150px\"\n                    height=\"225px\"\n                />\n                <ActorName>{name}</ActorName>\n                <Text>{character}</Text>\n                </CardActor>\n            );\n            })}\n        </ListActor>\n        </section>\n    );\n};\n\nexport default CastList;\n\nCastList.propTypes = {\n    actors: PropTypes.arrayOf(\n        PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        profile_path: PropTypes.string,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n        }).isRequired\n    ).isRequired,\n};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { RotatingLines } from 'react-loader-spinner';\n\nimport { getMovieCast } from 'api/featchTmdbApi';\n\nimport CastList from 'components/CastList/CastList';//!!!!!!!!!!!!\n \nconst Cast = () => {\n    const [actors, setActors] = useState([]);\n    const [load, setLoad] = useState(false);\n    const [isError, setIsError] = useState('');\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const fetch = async () => {\n        setLoad(true);\n        \n        try {\n            const dataMovie = await getMovieCast(movieId);\n\n            const actors = dataMovie.cast.map(\n            ({ id, name, character, profile_path }) => ({\n                id,\n                name,\n                character,\n                profile_path,\n            })\n            );\n\n            if (actors.length === 0) {\n            setIsError('No actors list');\n            }\n\n            setActors(actors);\n        } catch (error) {\n            setIsError(error.message)\n        } finally {\n            setLoad(false);\n        }\n        };\n        fetch();\n    }, [movieId]);\n\n    return (\n        <>\n        {actors.length !==0\n            ? <CastList actors={actors} />\n            : <div style={{\n                color: \"lightgrey\",\n                fontWeight: \"400\",\n                fontSize: \"14px\",\n                paddingLeft: \"40px\",\n                paddingTop:\"20px\"\n            }}>{isError}</div>}\n        {' '}\n        {load && (\n            <RotatingLines\n            strokeColor=\"rgb(11, 127, 171)\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n            />\n        )}\n        </>\n    );\n};\n\n\nexport default Cast;","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DetailsSection = styled.section`\n    display: block;\n    padding-top: 20px;\n    padding-bottom: 20px;\n`;\n\nexport const Wraper = styled.div`\n    display: flex;\n\n    margin-bottom: 20px;\n`;\n\nexport const Info = styled.div`\n    padding-left: 20px;\n    padding-top: 10px;\n`;\n\nexport const Name = styled.h2`\n    font-weight: 500;\n    font-size: 25px;\n    margin: 0;\n    margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n    font-weight: 400;\n    font-size: 14px;\n    margin-bottom: 20px;\n    width: 700px;\n    line-height: 1.3;\n`;\n\nexport const Text = styled.h3`\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 10px;\n`;\n\nexport const Genres = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-weight: 400;\n    font-size: 14px;\n    padding-left: 12px;\n    list-style: none;\n`;\n\nexport const GenresItem = styled.li`\n    &:not(:last-child) {\n        /* margin-bottom: 5px; */\n    }\n`;\n\nexport const LinkList = styled.ul`\n    display: flex;\n    margin-top: 15px;\n    list-style: none;\n`;\n\nexport const LinkItem = styled.li`\n    margin-left: 12px;\n    list-style: none;\n    &:not(:last-child) {\n        margin-right: 5px;\n    }\n`;\n\nexport const LinkMovie = styled(NavLink)`\n    padding: 5px 8px;\n    border-radius: 4px;\n    text-decoration: none;\n    font-weight: 500;\n    color:#000;\n    &.active {\n        color: #3b81d7;\n    }\n`;\n\nexport const BtnGoBack = styled(Link)`\n    cursor: pointer;\n    padding: 8px 16px;\n    border-radius: 4px;\n    text-decoration: none;\n    color: gray;\n    font-weight: 500;\n    margin-bottom: 25px;\n    width: 70px;\n    display: flex;\n    justify-content: center;\n\n    &:hover {\n        color: lightgray;\n    }\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { DetailsSection, Info, Name, Description, Text, Genres, GenresItem, LinkList, LinkItem, LinkMovie, Wraper, BtnGoBack } from './MovieItem.styled';\n\n// export const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\nexport const defaultImg = 'https://cdn4.vectorstock.com/i/1000x1000/39/98/error-404-page-not-found-vector-14463998.jpg'\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { title, release_date, overview, genres, vote_average, poster_path } = movie;\n\n  return (\n        <DetailsSection>\n        <BtnGoBack to={backLinkHref}>Go back</BtnGoBack>\n        <Wraper >\n            <img\n                src={\n                poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImg\n                }\n                alt={title}\n                width=\"250px\"\n                height=\"375px\"\n            />\n            \n            <Info>\n            <Name>\n                {release_date ? `${title} (${new Date(release_date).getFullYear()})` : title}\n            </Name>\n            <Description>\n                {vote_average\n                ? `User Score: ${Math.round(vote_average) * 10}% `\n                : 'User Score: no score'}\n            </Description>\n            <Text>Overview:</Text>\n            <Description>\n                {overview\n                ? overview\n                : 'No overview'}\n            </Description>\n            <Text>Genres:</Text>\n            <Genres>\n                {genres.length !== 0\n                ? genres.map(el => (\n                    <GenresItem key={el.id}>{el.name}</GenresItem>\n                    ))\n                : \"No genres\"\n                }\n            </Genres>\n            </Info>\n        </Wraper>\n\n        <Text>Additional information</Text>\n        \n        <LinkList>\n            <LinkItem>\n                <LinkMovie to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n                </LinkMovie>\n            </LinkItem>\n            <li>\n                <LinkMovie to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n                </LinkMovie>\n            </li>\n        </LinkList>\n        \n        </DetailsSection>\n    );\n};\n\nexport default MovieItem;\n\n\nMovieItem.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        poster_path: PropTypes.string,\n        genres: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n        }).isRequired\n        ).isRequired,\n    }).isRequired,\n};"],"names":["API_KEY","BASE_URL","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","log","stop","getMovieInfo","_x","_getMovieInfo","_callee2","movieId","_context2","getMovieReviews","_x2","_getMovieReviews","_callee3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_context4","getMoviesByQuery","_x4","_getMoviesByQuery","_callee5","query","_context5","ListActor","styled","_templateObject","_taggedTemplateLiteral","CardActor","_templateObject2","ImageActor","_templateObject3","ActorName","_templateObject4","Text","_templateObject5","_ref","actors","_jsx","children","map","_ref2","id","profile_path","name","character","_jsxs","src","defaultImg","alt","width","height","_useState","useState","_useState2","_slicedToArray","setActors","_useState3","_useState4","load","setLoad","_useState5","_useState6","isError","setIsError","useParams","useEffect","fetch","dataMovie","_actors","cast","length","message","finish","_Fragment","CastList","style","color","fontWeight","fontSize","paddingLeft","paddingTop","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","DetailsSection","Wraper","Info","Name","Description","_templateObject6","Genres","_templateObject7","GenresItem","_templateObject8","LinkList","_templateObject9","LinkItem","_templateObject10","LinkMovie","NavLink","_templateObject11","BtnGoBack","Link","_templateObject12","_location$state$from","_location$state","movie","backLinkHref","useLocation","state","from","title","release_date","overview","genres","vote_average","poster_path","to","Date","getFullYear","Math","round","el"],"sourceRoot":""}