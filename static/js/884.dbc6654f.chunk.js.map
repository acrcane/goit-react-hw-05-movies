{"version":3,"file":"static/js/884.dbc6654f.chunk.js","mappings":"kTAAaA,EAAU,mCACVC,EAAW,+BCEjB,SAAeC,IAAiB,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAStC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MATM,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEmBC,EAAAA,EAAAA,IAAU,GAADC,OACxBb,EAAQ,gCAAAa,OAA+Bd,IACxC,KAAD,EAFQ,OAAHS,EAAGC,EAAAK,KAAAL,EAAAM,OAAA,SAGFP,EAAIQ,MAAI,OAAAP,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEfS,QAAQC,IAAGV,EAAAQ,IAAQ,yBAAAR,EAAAW,OAAA,GAAAb,EAAA,mBAE1BJ,MAAA,KAAAC,UAAA,CAEM,SAAeiB,EAAYC,GAAA,OAAAC,EAAApB,MAAC,KAADC,UAAA,CASjC,SAAAmB,IAAA,OAAAA,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MATM,SAAAkB,EAA4BC,GAAO,IAAAjB,EAAA,OAAAF,IAAAA,MAAA,SAAAoB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEhBC,EAAAA,EAAAA,IAAU,GAADC,OACxBb,EAAQ,WAAAa,OAAUY,EAAO,aAAAZ,OAAYd,IACtC,KAAD,EAFQ,OAAHS,EAAGkB,EAAAZ,KAAAY,EAAAX,OAAA,SAGFP,EAAIQ,MAAI,OAAAU,EAAAhB,KAAA,EAAAgB,EAAAT,GAAAS,EAAA,SAEfR,QAAQC,IAAGO,EAAAT,IAAQ,yBAAAS,EAAAN,OAAA,GAAAI,EAAA,mBAE1BrB,MAAA,KAAAC,UAAA,CAEM,SAAeuB,EAAeC,GAAA,OAAAC,EAAA1B,MAAC,KAADC,UAAA,CASpC,SAAAyB,IAAA,OAAAA,GAAAxB,EAAAA,EAAAA,GAAAC,IAAAA,MATM,SAAAwB,EAA+BL,GAAO,IAAAjB,EAAA,OAAAF,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAEnBC,EAAAA,EAAAA,IAAU,GAADC,OACxBb,EAAQ,WAAAa,OAAUY,EAAO,qBAAAZ,OAAoBd,IAC9C,KAAD,EAFQ,OAAHS,EAAGuB,EAAAjB,KAAAiB,EAAAhB,OAAA,SAGFP,EAAIQ,MAAI,OAAAe,EAAArB,KAAA,EAAAqB,EAAAd,GAAAc,EAAA,SAEfb,QAAQC,IAAGY,EAAAd,IAAQ,yBAAAc,EAAAX,OAAA,GAAAU,EAAA,mBAE1B3B,MAAA,KAAAC,UAAA,CAEM,SAAe4B,EAAYC,GAAA,OAAAC,EAAA/B,MAAC,KAADC,UAAA,CASjC,SAAA8B,IAAA,OAAAA,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MATM,SAAA6B,EAA4BV,GAAO,IAAAjB,EAAA,OAAAF,IAAAA,MAAA,SAAA8B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAA1B,KAAA,EAAA0B,EAAAzB,KAAA,EAEhBC,EAAAA,EAAAA,IAAU,GAADC,OACxBb,EAAQ,WAAAa,OAAUY,EAAO,qBAAAZ,OAAoBd,IAC9C,KAAD,EAFQ,OAAHS,EAAG4B,EAAAtB,KAAAsB,EAAArB,OAAA,SAGFP,EAAIQ,MAAI,OAAAoB,EAAA1B,KAAA,EAAA0B,EAAAnB,GAAAmB,EAAA,SAEflB,QAAQC,IAAGiB,EAAAnB,IAAQ,yBAAAmB,EAAAhB,OAAA,GAAAe,EAAA,mBAE1BhC,MAAA,KAAAC,UAAA,CAEM,SAAeiC,EAAgBC,GAAA,OAAAC,EAAApC,MAAC,KAADC,UAAA,CASrC,SAAAmC,IAAA,OAAAA,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MATM,SAAAkC,EAAgCC,GAAK,IAAAjC,EAAA,OAAAF,IAAAA,MAAA,SAAAoC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAAhC,KAAA,EAAAgC,EAAA/B,KAAA,EAElBC,EAAAA,EAAAA,IAAU,GAADC,OACxBb,EAAQ,wBAAAa,OAAuB4B,EAAK,aAAA5B,OAAYd,IACjD,KAAD,EAFQ,OAAHS,EAAGkC,EAAA5B,KAAA4B,EAAA3B,OAAA,SAGFP,EAAIQ,MAAI,OAAA0B,EAAAhC,KAAA,EAAAgC,EAAAzB,GAAAyB,EAAA,SAEfxB,QAAQC,IAAGuB,EAAAzB,IAAQ,yBAAAyB,EAAAtB,OAAA,GAAAoB,EAAA,mBAE1BrC,MAAA,KAAAC,UAAA,C,iJCrDYuC,EAAiBC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kFAM/BC,EAASH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0DAMnBG,EAAOL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2DAKjBK,EAAOP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iGAOhBO,EAAcT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,2HAQtBS,EAAOX,EAAAA,GAAAA,GAASY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iFAMhBW,EAASb,EAAAA,GAAAA,GAASc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uKAUlBa,EAAaf,EAAAA,GAAAA,GAASgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8EAMtBe,EAAWjB,EAAAA,GAAAA,GAASkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4EAMpBiB,EAAWnB,EAAAA,GAAAA,GAASoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,sHAQpBmB,GAAYrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAeuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,8KAW3BsB,GAAYxB,EAAAA,EAAAA,IAAOyB,EAAAA,GAAPzB,CAAY0B,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,uS,SC7ExByB,EAAa,8FAqE1B,EAnEkB,SAAHC,GAAmB,IAADC,EAAAC,EAAZC,EAAKH,EAALG,MAEbC,EAAmC,QAAvBH,EAAiB,QAAjBC,GADDG,EAAAA,EAAAA,MACaC,aAAK,IAAAJ,OAAA,EAAdA,EAAgBK,YAAI,IAAAN,EAAAA,EAAI,IAErCO,EAAqEL,EAArEK,MAAOC,EAA8DN,EAA9DM,aAAcC,EAAgDP,EAAhDO,SAAUC,EAAsCR,EAAtCQ,OAAQC,EAA8BT,EAA9BS,aAAcC,EAAgBV,EAAhBU,YAE7D,OACMC,EAAAA,EAAAA,MAAC3C,EAAc,CAAA4C,SAAA,EACfC,EAAAA,EAAAA,KAACpB,EAAS,CAACqB,GAAIb,EAAaW,SAAC,aAC7BD,EAAAA,EAAAA,MAACvC,EAAM,CAAAwC,SAAA,EACHC,EAAAA,EAAAA,KAAA,OACIE,IACAL,EAAW,mCAAAxE,OAC8BwE,GACnCd,EAENoB,IAAKX,EACLY,MAAM,QACNC,OAAO,WAGXP,EAAAA,EAAAA,MAACrC,EAAI,CAAAsC,SAAA,EACLC,EAAAA,EAAAA,KAACrC,EAAI,CAAAoC,SACAN,EAAY,GAAApE,OAAMmE,EAAK,MAAAnE,OAAK,IAAIiF,KAAKb,GAAcc,cAAa,KAAMf,KAE3EQ,EAAAA,EAAAA,KAACnC,EAAW,CAAAkC,SACPH,EAAY,eAAAvE,OAC+B,GAA3BmF,KAAKC,MAAMb,GAAkB,MAC5C,0BAENI,EAAAA,EAAAA,KAACjC,EAAI,CAAAgC,SAAC,eACNC,EAAAA,EAAAA,KAACnC,EAAW,CAAAkC,SACPL,GAEC,iBAENM,EAAAA,EAAAA,KAACjC,EAAI,CAAAgC,SAAC,aACNC,EAAAA,EAAAA,KAAC/B,EAAM,CAAA8B,SACgB,IAAlBJ,EAAOe,OACNf,EAAOgB,KAAI,SAAAC,GAAE,OACXZ,EAAAA,EAAAA,KAAC7B,EAAU,CAAA4B,SAAca,EAAGC,MAAXD,EAAGE,GAA0B,IAEhD,qBAMVd,EAAAA,EAAAA,KAACjC,EAAI,CAAAgC,SAAC,4BAEND,EAAAA,EAAAA,MAACzB,EAAQ,CAAA0B,SAAA,EACLC,EAAAA,EAAAA,KAACzB,EAAQ,CAAAwB,UACLC,EAAAA,EAAAA,KAACvB,EAAS,CAACwB,GAAG,OAAOX,MAAO,CAAEC,KAAMH,GAAeW,SAAC,YAIxDC,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACvB,EAAS,CAACwB,GAAG,UAAUX,MAAO,CAAEC,KAAMH,GAAeW,SAAC,mBAQvE,C,0HCrBA,UA7CqB,WACjB,IAAAgB,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC5B,EAAK8B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAElBpF,GAAYuF,EAAAA,EAAAA,MAAZvF,QACFwF,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAK,eAAA5C,GAAAnE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA8G,EAAA,OAAA/G,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEcU,EAAAA,EAAAA,IAAaI,GAAS,KAAD,EAAvC4F,EAAS5G,EAAAK,KACf6F,EAASU,GAAW5G,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEpBsG,EAAW,aAEXE,EAAS,IAAK,CAAEK,SAAS,IAAQ,yBAAA7G,EAAAW,OAAA,GAAAb,EAAA,kBAEpC,kBATU,OAAAiE,EAAArE,MAAA,KAAAC,UAAA,KAWXgH,GACJ,GAAG,CAAC3F,EAASwF,IAERtC,GAKDW,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAAhC,SAAA,CACkB,IAAjBZ,EAAMuB,QACDV,EAAAA,EAAAA,KAACgC,EAAAA,EAAS,CAAC7C,MAAOA,KAClBa,EAAAA,EAAAA,KAAA,OAAKiC,MAAO,CACVC,MAAO,YACPC,WAAY,MACZC,SAAU,OACVC,YAAa,OACbC,WAAW,QACbvC,SAAEuB,KAERtB,EAAAA,EAAAA,KAACuC,EAAAA,SAAQ,CAACC,SAAU,KAAKzC,UACrBC,EAAAA,EAAAA,KAACyC,EAAAA,GAAM,SAhBJ,IAoBf,C","sources":["api/cosntants.js","api/featchTmdbApi.js","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx","pages/MovieDetails.jsx"],"sourcesContent":["export const API_KEY = '2d24f316d845754cbe16c61ca19f7ec5';\nexport const BASE_URL = 'https://api.themoviedb.org/3';","import axios from 'axios';\nimport { BASE_URL,  API_KEY } from './cosntants';\n\nexport async function getTrendingMovies() {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieInfo(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieReviews(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMovieCast(movieId) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function getMoviesByQuery(query) {\n    try {\n        const res = await axios.get(\n        `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n        );\n        return res.data;\n    } catch (error) {\n        console.log(error);\n    }\n}","import { NavLink, Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const DetailsSection = styled.section`\n    display: block;\n    padding-top: 20px;\n    padding-bottom: 20px;\n`;\n\nexport const Wraper = styled.div`\n    display: flex;\n\n    margin-bottom: 20px;\n`;\n\nexport const Info = styled.div`\n    padding-left: 20px;\n    padding-top: 10px;\n`;\n\nexport const Name = styled.h2`\n    font-weight: 500;\n    font-size: 25px;\n    margin: 0;\n    margin-bottom: 10px;\n`;\n\nexport const Description = styled.p`\n    font-weight: 400;\n    font-size: 14px;\n    margin-bottom: 20px;\n    width: 700px;\n    line-height: 1.3;\n`;\n\nexport const Text = styled.h3`\n    font-weight: 500;\n    font-size: 18px;\n    margin-bottom: 10px;\n`;\n\nexport const Genres = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    font-weight: 400;\n    font-size: 14px;\n    padding-left: 12px;\n    list-style: none;\n`;\n\nexport const GenresItem = styled.li`\n    &:not(:last-child) {\n        /* margin-bottom: 5px; */\n    }\n`;\n\nexport const LinkList = styled.ul`\n    display: flex;\n    margin-top: 15px;\n    list-style: none;\n`;\n\nexport const LinkItem = styled.li`\n    margin-left: 12px;\n    list-style: none;\n    &:not(:last-child) {\n        margin-right: 5px;\n    }\n`;\n\nexport const LinkMovie = styled(NavLink)`\n    padding: 5px 8px;\n    border-radius: 4px;\n    text-decoration: none;\n    font-weight: 500;\n    color:#000;\n    &.active {\n        color: #3b81d7;\n    }\n`;\n\nexport const BtnGoBack = styled(Link)`\n    cursor: pointer;\n    padding: 8px 16px;\n    border-radius: 4px;\n    text-decoration: none;\n    color: gray;\n    font-weight: 500;\n    margin-bottom: 25px;\n    width: 70px;\n    display: flex;\n    justify-content: center;\n\n    &:hover {\n        color: lightgray;\n    }\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { DetailsSection, Info, Name, Description, Text, Genres, GenresItem, LinkList, LinkItem, LinkMovie, Wraper, BtnGoBack } from './MovieItem.styled';\n\n// export const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\nexport const defaultImg = 'https://cdn4.vectorstock.com/i/1000x1000/39/98/error-404-page-not-found-vector-14463998.jpg'\n\nconst MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { title, release_date, overview, genres, vote_average, poster_path } = movie;\n\n  return (\n        <DetailsSection>\n        <BtnGoBack to={backLinkHref}>Go back</BtnGoBack>\n        <Wraper >\n            <img\n                src={\n                poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                    : defaultImg\n                }\n                alt={title}\n                width=\"250px\"\n                height=\"375px\"\n            />\n            \n            <Info>\n            <Name>\n                {release_date ? `${title} (${new Date(release_date).getFullYear()})` : title}\n            </Name>\n            <Description>\n                {vote_average\n                ? `User Score: ${Math.round(vote_average) * 10}% `\n                : 'User Score: no score'}\n            </Description>\n            <Text>Overview:</Text>\n            <Description>\n                {overview\n                ? overview\n                : 'No overview'}\n            </Description>\n            <Text>Genres:</Text>\n            <Genres>\n                {genres.length !== 0\n                ? genres.map(el => (\n                    <GenresItem key={el.id}>{el.name}</GenresItem>\n                    ))\n                : \"No genres\"\n                }\n            </Genres>\n            </Info>\n        </Wraper>\n\n        <Text>Additional information</Text>\n        \n        <LinkList>\n            <LinkItem>\n                <LinkMovie to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n                </LinkMovie>\n            </LinkItem>\n            <li>\n                <LinkMovie to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n                </LinkMovie>\n            </li>\n        </LinkList>\n        \n        </DetailsSection>\n    );\n};\n\nexport default MovieItem;\n\n\nMovieItem.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n        poster_path: PropTypes.string,\n        genres: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            name: PropTypes.string.isRequired,\n        }).isRequired\n        ).isRequired,\n    }).isRequired,\n};","import { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieInfo } from 'api/featchTmdbApi';\nimport MovieItem from 'components/MovieItem/MovieItem';\n\n\nconst MovieDetails = () => {\n    const [movie, setMovie] = useState(null);\n    const [isError, setIsError] = useState('');\n\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetch = async () => {\n        try {\n            const dataMovie = await getMovieInfo(movieId);\n            setMovie(dataMovie);\n        } catch (error) {\n            setIsError('No movies')\n            \n            navigate('/', { replace: true });\n        }\n        };\n\n        fetch();\n    }, [movieId, navigate]);\n\n    if (!movie) {\n        return null;\n    }\n\n    return (\n        <>\n        {movie.length !== 0\n            ? <MovieItem movie={movie} />\n            : <div style={{\n                color: \"lightgrey\",\n                fontWeight: \"400\",\n                fontSize: \"14px\",\n                paddingLeft: \"40px\",\n                paddingTop:\"20px\"\n            }}>{isError}</div>}\n        \n        <Suspense fallback={null}>\n            <Outlet />\n        </Suspense>\n        </>\n    );\n};\n\nexport default MovieDetails;"],"names":["API_KEY","BASE_URL","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","axios","concat","sent","abrupt","data","t0","console","log","stop","getMovieInfo","_x","_getMovieInfo","_callee2","movieId","_context2","getMovieReviews","_x2","_getMovieReviews","_callee3","_context3","getMovieCast","_x3","_getMovieCast","_callee4","_context4","getMoviesByQuery","_x4","_getMoviesByQuery","_callee5","query","_context5","DetailsSection","styled","_templateObject","_taggedTemplateLiteral","Wraper","_templateObject2","Info","_templateObject3","Name","_templateObject4","Description","_templateObject5","Text","_templateObject6","Genres","_templateObject7","GenresItem","_templateObject8","LinkList","_templateObject9","LinkItem","_templateObject10","LinkMovie","NavLink","_templateObject11","BtnGoBack","Link","_templateObject12","defaultImg","_ref","_location$state$from","_location$state","movie","backLinkHref","useLocation","state","from","title","release_date","overview","genres","vote_average","poster_path","_jsxs","children","_jsx","to","src","alt","width","height","Date","getFullYear","Math","round","length","map","el","name","id","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","isError","setIsError","useParams","navigate","useNavigate","useEffect","fetch","dataMovie","replace","_Fragment","MovieItem","style","color","fontWeight","fontSize","paddingLeft","paddingTop","Suspense","fallback","Outlet"],"sourceRoot":""}